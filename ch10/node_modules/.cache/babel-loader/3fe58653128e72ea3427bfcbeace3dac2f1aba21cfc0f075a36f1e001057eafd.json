{"ast":null,"code":"var _jsxFileName = \"C:\\\\react_project\\\\react\\\\ch10\\\\src\\\\ReactButton6.jsx\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReactButton6() {\n  //styled.태그명` CSS 스타일 작성 `\n  const StyledButton = styled.button`\n      color: white;\n      background-color: green;\n   `;\n\n  //감싸기 기능으로 새로운 버튼 만들기\n  const LargeButton = styled(StyledButton)`\n      font-size: 50px;\n   `;\n  const ReactButton = props => {\n    console.log(props);\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: props.className,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 14\n    }, this);\n  };\n\n  //리액트 전통 방식으로 만든 버튼에 감싸기 적용\n  const ReactLargeButton = styled(ReactButton)`\n      font-size: 50px;\n   `;\n  const PrimaryButton = styled.button`\n      color: ${props => props.primary ? 'white' : 'aqua'};\n   `;\n  /*\r\n  const PrimaryButton = styled.button`\r\n     color: ${function (props) {\r\n        console.log(props);\r\n          // primary: true 여부에 따라서 color가 지정된다.\r\n        if (props.primary) return 'Aqua';\r\n        else return 'blue';\r\n     }};\r\n  `;\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StyledButton, {\n      children: \"\\uBC84\\uD2BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(LargeButton, {\n      children: \"Large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(ReactButton, {\n      children: \"React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(ReactLargeButton, {\n      children: \"React Large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n      children: \"Normal1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n      primary: true,\n      children: \"Normal2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n}\n_c = ReactButton6;\nexport default ReactButton6;\nvar _c;\n$RefreshReg$(_c, \"ReactButton6\");","map":{"version":3,"names":["styled","jsxDEV","_jsxDEV","ReactButton6","StyledButton","button","LargeButton","ReactButton","props","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ReactLargeButton","PrimaryButton","primary","_c","$RefreshReg$"],"sources":["C:/react_project/react/ch10/src/ReactButton6.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nfunction ReactButton6() {\r\n   //styled.태그명` CSS 스타일 작성 `\r\n   const StyledButton = styled.button`\r\n      color: white;\r\n      background-color: green;\r\n   `;\r\n\r\n   //감싸기 기능으로 새로운 버튼 만들기\r\n   const LargeButton = styled(StyledButton)`\r\n      font-size: 50px;\r\n   `;\r\n\r\n   const ReactButton = (props) => {\r\n      console.log(props);\r\n      return <button className={props.className}>{props.children}</button>;\r\n   };\r\n\r\n   //리액트 전통 방식으로 만든 버튼에 감싸기 적용\r\n   const ReactLargeButton = styled(ReactButton)`\r\n      font-size: 50px;\r\n   `;\r\n\r\n   const PrimaryButton = styled.button`\r\n      color: ${(props) => (props.primary ? 'white' : 'aqua')};\r\n   `;\r\n   /*\r\n   const PrimaryButton = styled.button`\r\n      color: ${function (props) {\r\n         console.log(props);\r\n\r\n         // primary: true 여부에 따라서 color가 지정된다.\r\n         if (props.primary) return 'Aqua';\r\n         else return 'blue';\r\n      }};\r\n   `;\r\n   */\r\n\r\n   return (\r\n      <div>\r\n         <StyledButton>버튼</StyledButton>\r\n         <LargeButton>Large</LargeButton>\r\n         <ReactButton>React</ReactButton>\r\n         <ReactLargeButton>React Large</ReactLargeButton>\r\n         <PrimaryButton>Normal1</PrimaryButton>\r\n         <PrimaryButton primary>Normal2</PrimaryButton>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default ReactButton6;\r\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,YAAYA,CAAA,EAAG;EACrB;EACA,MAAMC,YAAY,GAAGJ,MAAM,CAACK,MAAM;AACrC;AACA;AACA,IAAI;;EAED;EACA,MAAMC,WAAW,GAAGN,MAAM,CAACI,YAAY,CAAC;AAC3C;AACA,IAAI;EAED,MAAMG,WAAW,GAAIC,KAAK,IAAK;IAC5BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,oBAAON,OAAA;MAAQS,SAAS,EAAEH,KAAK,CAACG,SAAU;MAAAC,QAAA,EAAEJ,KAAK,CAACI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EACvE,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGjB,MAAM,CAACO,WAAW,CAAC;AAC/C;AACA,IAAI;EAED,MAAMW,aAAa,GAAGlB,MAAM,CAACK,MAAM;AACtC,eAAgBG,KAAK,IAAMA,KAAK,CAACW,OAAO,GAAG,OAAO,GAAG,MAAO;AAC5D,IAAI;EACD;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGG,oBACGjB,OAAA;IAAAU,QAAA,gBACGV,OAAA,CAACE,YAAY;MAAAQ,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eAC/Bd,OAAA,CAACI,WAAW;MAAAM,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eAChCd,OAAA,CAACK,WAAW;MAAAK,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eAChCd,OAAA,CAACe,gBAAgB;MAAAL,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CAAC,eAChDd,OAAA,CAACgB,aAAa;MAAAN,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,eACtCd,OAAA,CAACgB,aAAa;MAACC,OAAO;MAAAP,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEZ;AAACI,EAAA,GA/CQjB,YAAY;AAiDrB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}